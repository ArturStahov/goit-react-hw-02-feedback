{"version":3,"sources":["components/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["PageSection","styled","section","SectionTitle","h2","Section","title","children","OptionsBlock","div","Button","button","props","BgColor","FeedbackOptions","onLeaveFeedback","type","onClick","StatisticsBlock","ul","StatisticsItem","li","Statistics","good","neutral","bad","total","positivePercentage","NotificationTitle","h3","Notification","App","state","handlerFeedbackButton","name","setState","prevState","Object","values","this","reduce","acc","elem","Math","round","countTotalFeedback","percentage","countPositiveFeedbackPercentage","Component","ReactDOM","render","document","querySelector"],"mappings":"gtBAGA,IAAMA,EAAcC,IAAOC,QAAV,KAUXC,EAAeF,IAAOG,GAAV,KAUH,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,eAACP,EAAD,WACI,cAACG,EAAD,UAAeG,IACdC,K,2ZCxBb,IAAMC,EAAeP,IAAOQ,IAAV,KAOZC,EAAST,IAAOU,OAAV,KAGO,SAAAC,GAAK,OAAIA,EAAMC,WASnB,SAASC,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACtC,OACI,eAACP,EAAD,WACI,cAACE,EAAD,CAAQM,KAAK,SAASC,QAAS,kBAAMF,EAAgB,SAASF,QAAS,QAAvE,kBACA,cAACH,EAAD,CAAQM,KAAK,SAASC,QAAS,kBAAMF,EAAgB,YAAYF,QAAS,SAA1E,qBACA,cAACH,EAAD,CAAQM,KAAK,SAASC,QAAS,kBAAMF,EAAgB,QAAQF,QAAS,MAAtE,oB,+UCxBZ,IAAMK,EAAkBjB,IAAOkB,GAAV,KAMfC,EAAiBnB,IAAOoB,GAAV,KAWL,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC5D,OACI,eAACT,EAAD,WACI,eAACE,EAAD,oBAAuBG,KACvB,eAACH,EAAD,uBAA0BI,KAC1B,eAACJ,EAAD,mBAAsBK,KACtB,eAACL,EAAD,qBAAwBM,KACxB,eAACN,EAAD,iCAAoCO,EAApC,U,oLCvBZ,IAAMC,EAAoB3B,IAAO4B,GAAV,KASR,SAASC,EAAT,GAAkC,IAAVxB,EAAS,EAATA,MACnC,OACI,mCACI,cAACsB,EAAD,UAAoBtB,M,ICVXyB,E,4MACjBC,MAAQ,CACJT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTQ,sBAAwB,SAAAC,GACpB,EAAKC,UAAS,SAACC,GACX,OAAO,eACFF,EAAOE,EAAUF,GAAQ,O,mEAMlC,OAAOG,OAAOC,OAAOC,KAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAC1C,OAAOD,EAAOC,IACf,K,sDAEyBhB,EAAOH,GACnC,OAAOoB,KAAKC,MAAc,IAAPrB,EAAcG,K,+BAG3B,IAAD,EAC0Ba,KAAKP,MAA5BT,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,IACjBC,EAAQa,KAAKM,qBACbC,EAAaP,KAAKQ,gCAAgCrB,EAAOH,GAC/D,OACI,qCACI,cAAClB,EAAD,CAASC,MAAM,wBAAf,SACI,cAACQ,EAAD,CAAiBC,gBAAiBwB,KAAKN,0BAE3C,cAAC5B,EAAD,CAASC,MAAM,aAAf,SACKoB,EAAQ,EACL,cAACJ,EAAD,CACIC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBmB,IAGpB,cAAChB,EAAD,CAAcxB,MAAM,+B,GA3Cf0C,aCEjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.69c66c26.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst PageSection = styled.section`\r\npadding-top:25px;\r\npadding-bottom:25px;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\njustify-content:center;\r\nmax-width:600px;\r\nmargin: 0 auto;\r\nborder: solid 2px grey;\r\n`\r\nconst SectionTitle = styled.h2`\r\nwidth:100%;\r\ntext-align:center;\r\nfont-size:1rem;\r\nfont-weight:600;\r\ncolor: red;\r\ntext-transform:uppercase;\r\nmargin-bottom:30px;\r\n`\r\n\r\nexport default function Section({ title, children }) {\r\n    return (\r\n        <PageSection>\r\n            <SectionTitle>{title}</SectionTitle>\r\n            {children}\r\n        </PageSection>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst OptionsBlock = styled.div`\r\npadding-bottom:25px;\r\ndisplay:flex;\r\njustify-content:space-between;\r\nwidth:80%;\r\nmargin:0 auto;\r\n`\r\nconst Button = styled.button`\r\nheight:30px;\r\npadding:10px 20px;\r\nbackground-color:${props => props.BgColor};\r\nborder:none;\r\nborder-radius:0.3rem;\r\nfont-size:0.8rem;\r\ncolor: black;\r\ntext-transform:uppercase;\r\ncursor:pointer;\r\n`\r\n\r\nexport default function FeedbackOptions({ onLeaveFeedback }) {\r\n    return (\r\n        <OptionsBlock>\r\n            <Button type='button' onClick={() => onLeaveFeedback('good')} BgColor={'green'}>Good</Button>\r\n            <Button type='button' onClick={() => onLeaveFeedback('neutral')} BgColor={'yellow'}>Neutral</Button>\r\n            <Button type='button' onClick={() => onLeaveFeedback('bad')} BgColor={'red'}>Bad</Button>\r\n        </OptionsBlock>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StatisticsBlock = styled.ul`\r\nwidth:80%;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\nmargin:0 auto;\r\n`\r\nconst StatisticsItem = styled.li`\r\nwidth:100%;\r\ntext-align:center;\r\nfont-size:0.8rem;\r\ncolor:black;\r\nfont-weight:500;\r\n&:not(:last-child){\r\n    margin-bottom:15px;\r\n}\r\n`\r\n\r\nexport default function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n    return (\r\n        <StatisticsBlock>\r\n            <StatisticsItem>Good: {good}</StatisticsItem>\r\n            <StatisticsItem>Neutral: {neutral}</StatisticsItem>\r\n            <StatisticsItem>Bad: {bad}</StatisticsItem>\r\n            <StatisticsItem>Total: {total}</StatisticsItem>\r\n            <StatisticsItem>Positive feedback: {positivePercentage}&#37;</StatisticsItem>\r\n        </StatisticsBlock>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst NotificationTitle = styled.h3`\r\nwidth:100%;\r\ntext-align:center;\r\nfont-size:1rem;\r\nfont-weight:600;\r\ncolor: gray;\r\ntext-transform:uppercase;\r\n`\r\n\r\nexport default function Notification({ title }) {\r\n    return (\r\n        <>\r\n            <NotificationTitle>{title}</NotificationTitle>\r\n        </>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport Section from './components/Section';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Notification from './components/Notification/Notification';\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n    };\r\n\r\n    handlerFeedbackButton = name => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                [name]: prevState[name] + 1\r\n            }\r\n        })\r\n    };\r\n\r\n    countTotalFeedback() {\r\n        return Object.values(this.state).reduce((acc, elem) => {\r\n            return acc += elem\r\n        }, 0)\r\n    }\r\n    countPositiveFeedbackPercentage(total, good) {\r\n        return Math.round((good * 100) / total)\r\n    }\r\n\r\n    render() {\r\n        const { good, neutral, bad } = this.state\r\n        const total = this.countTotalFeedback();\r\n        const percentage = this.countPositiveFeedbackPercentage(total, good);\r\n        return (\r\n            <>\r\n                <Section title=\"Please leave feedback\">\r\n                    <FeedbackOptions onLeaveFeedback={this.handlerFeedbackButton} />\r\n                </Section>\r\n                <Section title=\"Statistics\">\r\n                    {total > 0 ? (\r\n                        <Statistics\r\n                            good={good}\r\n                            neutral={neutral}\r\n                            bad={bad}\r\n                            total={total}\r\n                            positivePercentage={percentage}\r\n                        />\r\n                    ) : (\r\n                            <Notification title=\"No feedback given\" />\r\n                        )}\r\n                </Section>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './normalize.css'\r\nimport './base.css'\r\nimport App from './App'\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}